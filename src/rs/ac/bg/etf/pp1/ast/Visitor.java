// generated with ast extension for cup
// version 0.8
// 25/5/2023 21:12:28


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(Constant Constant);
    public void visit(Matched Matched);
    public void visit(MethodType MethodType);
    public void visit(StatementList StatementList);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(FormParsList FormParsList);
    public void visit(Condition Condition);
    public void visit(MulOp MulOp);
    public void visit(OptActParsInParens OptActParsInParens);
    public void visit(ActParsList ActParsList);
    public void visit(RelOp RelOp);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(AddOp AddOp);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(MulOpMod MulOpMod);
    public void visit(MulOpDiv MulOpDiv);
    public void visit(MulOpMul MulOpMul);
    public void visit(AddOpMinus AddOpMinus);
    public void visit(AddOpPlus AddOpPlus);
    public void visit(RelOpLe RelOpLe);
    public void visit(RelOpLt RelOpLt);
    public void visit(RelOpGe RelOpGe);
    public void visit(RelOpGt RelOpGt);
    public void visit(RelOpNeq RelOpNeq);
    public void visit(RelOpEq RelOpEq);
    public void visit(AssignOp AssignOp);
    public void visit(Label Label);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorArr DesignatorArr);
    public void visit(DesignatorMatrix DesignatorMatrix);
    public void visit(SingleActPar SingleActPar);
    public void visit(MultActPars MultActPars);
    public void visit(NoActualParams NoActualParams);
    public void visit(ActualParams ActualParams);
    public void visit(OptActParams OptActParams);
    public void visit(FactorExpr FactorExpr);
    public void visit(ConstrFactorArr ConstrFactorArr);
    public void visit(ConstrFactorMatrix ConstrFactorMatrix);
    public void visit(FactorConst FactorConst);
    public void visit(FactorVar FactorVar);
    public void visit(FactorFuncCall FactorFuncCall);
    public void visit(FactorTerm FactorTerm);
    public void visit(MulOpFactorTerm MulOpFactorTerm);
    public void visit(TermExpr TermExpr);
    public void visit(TermExprMinus TermExprMinus);
    public void visit(AddOpTermExpr AddOpTermExpr);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(MultCondFact MultCondFact);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(MultCondTerm MultCondTerm);
    public void visit(Or Or);
    public void visit(ErrorCond ErrorCond);
    public void visit(SingleCondition SingleCondition);
    public void visit(MultCondition MultCondition);
    public void visit(DesignatorStmtDecr DesignatorStmtDecr);
    public void visit(DesignatorStmtIncr DesignatorStmtIncr);
    public void visit(DesignatorStmtFuncCall DesignatorStmtFuncCall);
    public void visit(ErrorAssign ErrorAssign);
    public void visit(DesignatorStmtAssign DesignatorStmtAssign);
    public void visit(Type Type);
    public void visit(ErrorFormPars ErrorFormPars);
    public void visit(FormParsHead FormParsHead);
    public void visit(FormParsHeadArr FormParsHeadArr);
    public void visit(FormParsHeadMatrix FormParsHeadMatrix);
    public void visit(FormParsChain FormParsChain);
    public void visit(FormParsChainArr FormParsChainArr);
    public void visit(FormParsChainMatrix FormParsChainMatrix);
    public void visit(NoFormPars NoFormPars);
    public void visit(FormParamsList FormParamsList);
    public void visit(MapEntry MapEntry);
    public void visit(WhileEntry WhileEntry);
    public void visit(ElseEntry ElseEntry);
    public void visit(IfEntry IfEntry);
    public void visit(MatchedStatements MatchedStatements);
    public void visit(MapStmt MapStmt);
    public void visit(PrintStmt PrintStmt);
    public void visit(PrintStmtNum PrintStmtNum);
    public void visit(ReadStmt ReadStmt);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(BreakStmt BreakStmt);
    public void visit(ContinueStmt ContinueStmt);
    public void visit(WhileStmt WhileStmt);
    public void visit(MatchedIfElse MatchedIfElse);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmatchedStatement UnmatchedStatement);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(NoStatements NoStatements);
    public void visit(Statements Statements);
    public void visit(MethodTypeVoid MethodTypeVoid);
    public void visit(MethodTypeNotVoid MethodTypeNotVoid);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(NoVarDeclarations NoVarDeclarations);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(ErrorVarDecl ErrorVarDecl);
    public void visit(VarDeclHead VarDeclHead);
    public void visit(VarDeclHeadArr VarDeclHeadArr);
    public void visit(VarDeclHeadMatrix VarDeclHeadMatrix);
    public void visit(VarDeclChain VarDeclChain);
    public void visit(VarDeclChainArr VarDeclChainArr);
    public void visit(VarDeclChainMatrix VarDeclChainMatrix);
    public void visit(VarDeclSemi VarDeclSemi);
    public void visit(ConstDeclHead ConstDeclHead);
    public void visit(ConstDeclChain ConstDeclChain);
    public void visit(ConstDeclSemi ConstDeclSemi);
    public void visit(DeclListDerived1 DeclListDerived1);
    public void visit(DeclListVar DeclListVar);
    public void visit(DeclListConst DeclListConst);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
