program MJProgram
	const int a = 2, b = 3;
	const bool isTrue = true;
	int x; int y;
	bool isFalse;
	const char ch = 'a';
	const char notCorrect = 2; // error
	int arr[];
	int matrix[][];
	int matrixError[][];
	int matrix[][];

{

	int k () int c; {
		c = 2;
		return c+2;
	}
	
	int foo (int a, int b, int arr[], int mat[][], char c, bool flag) {
		return 0;
	}

	int main() {
		
		print(1);
		
		arr = new int[5];
		matrix = new int[3][4];
		matrixError = new char[3][4]; // error
		
		arr[1] = 3;
		matrix[1][2] = 3;
		
		matrix[1] = 3; // error
		
		matrix[0] = new int[4];
		
		arr++; // error
		arr[1]++;
		matrix[1][2]--;
		matrix[1]++; // error
		
		arr[1] = new int[3][4]; // error
		matrix = new int[3]; // error
		
		x = y + 5 + 3 ;
		
		print(2);
		
		k();
		
		while (1 < 2 || 1 > 3) {
			break;
		}
		
		break; // error
		
		foo(1, 2, new int[2], new int[2][2], 'a', true); // ok
		foo(1, 2, new int[2], new int[2][2], 'a'); // error
		foo(1, 2, new int[2], new char[2][2], 'a', true); // error
		
		x = k();
		
		arr = arr.map(x => 2 * x);
		matrix = arr.map(x => 2 * x); // error
		arr = matrix.map(x => 2 * x); // error
		arr = arr.map(isFalse => 2 * isFalse); // error
		
		return 1;
	}
}