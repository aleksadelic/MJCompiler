program MJProgram
	int x; int y;
	int arr[];
	int matrix[][];
	char znak;
	bool flag;
{

	int k (int a, int b) int c, d; int niz[]; {
		c = 2;
		c++;
		return c + a + b + 2;
	}
	
	void foo(int a, int b) {
		print(a + b);
	}

	void main() int i, j; {
		i = 55;
		print(i);
	
		print(1);
	
		x = 3;
		x++;
		
		print(x);
		
		x--;
		
		print(x);
		
		y = 4 + 9 + k(1, 2);
		
		k(1, 2);
		
		print(y);
		
		x = 10 - 3;
		
		print(x);
		
		x = -1 + 3;
		
		print(x);
		
		x = 5 * 3 + 4 / 2 + 10 % 3;
		
		print(x);
		
		y = 2;
		
		x = x / 2;
		
		print(x);
		
		print(5 * 2 + 2);
		
		print((2 + 2) * 5);
		
		x = 5;
		
		foo(3, x);
		
		print('a');
		
		arr = new int[3];
		
		arr[0] = 5;
		arr[1] = arr[0];
		arr[2] = arr[1] + arr[0];
		
		print(arr[0]);
		print(arr[1]);
		print(arr[2]);
		
		arr[0]++;
		arr[1]--;
		
		print(arr[0]);
		print(arr[1]);
		
		arr[1 + 1] = 20;
		
		print(arr[2]);
		
		matrix = new int[3][4];
	
		print(i);
			
		matrix[0][1] = 1;
		matrix[1][2] = 5;
		
		print(matrix[0][1]);
		print(matrix[1][2]);
		print(matrix[1][3]);
		
		matrix[0][0] = matrix[1][2];
		
		print(matrix[0][0]);
		
		matrix[0][0]--;
		matrix[1][2]++;
		
		print(matrix[0][0]);
		print(matrix[1][2]);
		
		i = 1;
		j = 2;
		
		x = 2;
		y = 2;
		
		matrix[i + j - 1][x * y - 1] = 10;
		print(matrix[2][3]);
		
		read(x);
		print(x);
		
		read(znak);
		print(znak);
		
		flag = true;
		print(flag);
		
		flag = false;
		print(flag);
		
	}
}